secret-key = "secret"
secret-key = ${?SECRET_KEY}

logger.scala.slick = INFO

akka.http {
  server {
    port = 8080
  }
  server.parsing.illegal-header-warnings = on
  client.parsing.illegal-header-warnings = on
  caching {
    initialCapacity: 25
    maxCapacity = 50
    timeToLive = 20
    timeToIdle = 10
  }
  host-connection-pool.max-open-requests = 64
}

server {
  host: "localhost"
  host = ${?API_SERVER_HOST}
  version: "v01"
  port: 8080
  initialization-timeout: 5
}

database = {
  connectionPool = "HikariCP" //use HikariCP for our connection pool
  dataSourceClass = "org.postgresql.ds.PGSimpleDataSource" //Simple datasource with no connection pooling. The connection pool has already been specified with HikariCP.
  driver = "org.postgresql.Driver"
  profile = "slick.jdbc.PostgresProfile$"
  //  url = "jdbc:postgresql://localhost:5435/skeletondb",
  properties {
    serverName = "localhost"
    serverName = ${?POSTGRES_SERVER_NAME}
    portNumber = 5435
    portNumber = ${?POSTGRES_SERVER_PORT}
    databaseName = "skeletondb"
    databaseName = ${?POSTGRES_DB_NAME}
    user = "skeletondb"
    user = ${?POSTGRES_DB_USER}
    password = "skeletondb"
    password = ${?POSTGRES_DB_PASSWORD}
  }
  numThreads = 10
}

authentication {
  token: {
    prefix: "Bearer "
    secret: "super_secret_key"
    access: 86400
    refresh: 3600
  }
  roles: ["admin", "developer", "client"]
}
